/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@china-name: 'china';
@china-x: 0px;
@china-y: 0px;
@china-offset-x: 0px;
@china-offset-y: 0px;
@china-width: 100px;
@china-height: 100px;
@china-total-width: 300px;
@china-total-height: 200px;
@china-image: './spritesmith-generated/sprite.png';
@china: 0px 0px 0px 0px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'china';
@europe-name: 'europe';
@europe-x: 100px;
@europe-y: 0px;
@europe-offset-x: -100px;
@europe-offset-y: 0px;
@europe-width: 100px;
@europe-height: 100px;
@europe-total-width: 300px;
@europe-total-height: 200px;
@europe-image: './spritesmith-generated/sprite.png';
@europe: 100px 0px -100px 0px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'europe';
@japan-name: 'japan';
@japan-x: 0px;
@japan-y: 100px;
@japan-offset-x: 0px;
@japan-offset-y: -100px;
@japan-width: 100px;
@japan-height: 100px;
@japan-total-width: 300px;
@japan-total-height: 200px;
@japan-image: './spritesmith-generated/sprite.png';
@japan: 0px 100px 0px -100px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'japan';
@korea-name: 'korea';
@korea-x: 100px;
@korea-y: 100px;
@korea-offset-x: -100px;
@korea-offset-y: -100px;
@korea-width: 100px;
@korea-height: 100px;
@korea-total-width: 300px;
@korea-total-height: 200px;
@korea-image: './spritesmith-generated/sprite.png';
@korea: 100px 100px -100px -100px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'korea';
@taiwan-name: 'taiwan';
@taiwan-x: 200px;
@taiwan-y: 0px;
@taiwan-offset-x: -200px;
@taiwan-offset-y: 0px;
@taiwan-width: 100px;
@taiwan-height: 100px;
@taiwan-total-width: 300px;
@taiwan-total-height: 200px;
@taiwan-image: './spritesmith-generated/sprite.png';
@taiwan: 200px 0px -200px 0px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'taiwan';
@us-name: 'us';
@us-x: 200px;
@us-y: 100px;
@us-offset-x: -200px;
@us-offset-y: -100px;
@us-width: 100px;
@us-height: 100px;
@us-total-width: 300px;
@us-total-height: 200px;
@us-image: './spritesmith-generated/sprite.png';
@us: 200px 100px -200px -100px 100px 100px 300px 200px './spritesmith-generated/sprite.png' 'us';
@retina-china-name: 'retina_china';
@retina-china-x: 0px;
@retina-china-y: 0px;
@retina-china-offset-x: 0px;
@retina-china-offset-y: 0px;
@retina-china-width: 200px;
@retina-china-height: 200px;
@retina-china-total-width: 600px;
@retina-china-total-height: 400px;
@retina-china-image: './spritesmith-generated/sprite@2x.png';
@retina-china: 0px 0px 0px 0px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_china';
@retina-europe-name: 'retina_europe';
@retina-europe-x: 200px;
@retina-europe-y: 0px;
@retina-europe-offset-x: -200px;
@retina-europe-offset-y: 0px;
@retina-europe-width: 200px;
@retina-europe-height: 200px;
@retina-europe-total-width: 600px;
@retina-europe-total-height: 400px;
@retina-europe-image: './spritesmith-generated/sprite@2x.png';
@retina-europe: 200px 0px -200px 0px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_europe';
@retina-japan-name: 'retina_japan';
@retina-japan-x: 0px;
@retina-japan-y: 200px;
@retina-japan-offset-x: 0px;
@retina-japan-offset-y: -200px;
@retina-japan-width: 200px;
@retina-japan-height: 200px;
@retina-japan-total-width: 600px;
@retina-japan-total-height: 400px;
@retina-japan-image: './spritesmith-generated/sprite@2x.png';
@retina-japan: 0px 200px 0px -200px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_japan';
@retina-korea-name: 'retina_korea';
@retina-korea-x: 200px;
@retina-korea-y: 200px;
@retina-korea-offset-x: -200px;
@retina-korea-offset-y: -200px;
@retina-korea-width: 200px;
@retina-korea-height: 200px;
@retina-korea-total-width: 600px;
@retina-korea-total-height: 400px;
@retina-korea-image: './spritesmith-generated/sprite@2x.png';
@retina-korea: 200px 200px -200px -200px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_korea';
@retina-taiwan-name: 'retina_taiwan';
@retina-taiwan-x: 400px;
@retina-taiwan-y: 0px;
@retina-taiwan-offset-x: -400px;
@retina-taiwan-offset-y: 0px;
@retina-taiwan-width: 200px;
@retina-taiwan-height: 200px;
@retina-taiwan-total-width: 600px;
@retina-taiwan-total-height: 400px;
@retina-taiwan-image: './spritesmith-generated/sprite@2x.png';
@retina-taiwan: 400px 0px -400px 0px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_taiwan';
@retina-us-name: 'retina_us';
@retina-us-x: 400px;
@retina-us-y: 200px;
@retina-us-offset-x: -400px;
@retina-us-offset-y: -200px;
@retina-us-width: 200px;
@retina-us-height: 200px;
@retina-us-total-width: 600px;
@retina-us-total-height: 400px;
@retina-us-image: './spritesmith-generated/sprite@2x.png';
@retina-us: 400px 200px -400px -200px 200px 200px 600px 400px './spritesmith-generated/sprite@2x.png' 'retina_us';
@spritesheet-width: 300px;
@spritesheet-height: 200px;
@spritesheet-image: './spritesmith-generated/sprite.png';
@spritesheet-sprites: @china @europe @japan @korea @taiwan @us;
@spritesheet: 300px 200px './spritesmith-generated/sprite.png' @spritesheet-sprites;
@retina-spritesheet-width: 600px;
@retina-spritesheet-height: 400px;
@retina-spritesheet-image: './spritesmith-generated/sprite@2x.png';
@retina-spritesheet-sprites: @retina-china @retina-europe @retina-japan @retina-korea @retina-taiwan @retina-us;
@retina-spritesheet: 600px 400px './spritesmith-generated/sprite@2x.png' @retina-spritesheet-sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
@china-group-name: 'china';
@china-group: 'china' @china @retina-china;
@europe-group-name: 'europe';
@europe-group: 'europe' @europe @retina-europe;
@japan-group-name: 'japan';
@japan-group: 'japan' @japan @retina-japan;
@korea-group-name: 'korea';
@korea-group: 'korea' @korea @retina-korea;
@taiwan-group-name: 'taiwan';
@taiwan-group: 'taiwan' @taiwan @retina-taiwan;
@us-group-name: 'us';
@us-group: 'us' @us @retina-us;
@retina-groups: @china-group @europe-group @japan-group @korea-group @taiwan-group @us-group;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

@icon-home-group: 'icon-home' @icon-home @icon-home-2x;

.icon-home {
  .retina-sprite(@icon-home-group);
}
*/
.sprite-background-size(@sprite) {
  @sprite-total-width: extract(@sprite, 7);
  @sprite-total-height: extract(@sprite, 8);
  background-size: @sprite-total-width @sprite-total-height;
}

.retina-sprite(@retina-group) {
  @normal-sprite: extract(@retina-group, 2);
  @retina-sprite: extract(@retina-group, 3);
  .sprite(@normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    .sprite-image(@retina-sprite);
    .sprite-background-size(@normal-sprite);
  }
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}

/*
The `.retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in LESS

.retina-sprites(@retina-groups);
*/
.retina-sprites(@retina-groups, @i: 1) when (@i <= length(@retina-groups)) {
  @retina-group: extract(@retina-groups, @i);
  @sprite-name: e(extract(@retina-group, 1));
  .@{sprite-name} {
    .retina-sprite(@retina-group);
  }
  .retina-sprites(@retina-groups, @i + 1);
}
