/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@14-name: '14';
@14-x: 0px;
@14-y: 0px;
@14-offset-x: 0px;
@14-offset-y: 0px;
@14-width: 100px;
@14-height: 100px;
@14-total-width: 308px;
@14-total-height: 308px;
@14-image: './spritesmith-generated/sprite.png';
@14: 0px 0px 0px 0px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '14';
@26-name: '26';
@26-x: 104px;
@26-y: 0px;
@26-offset-x: -104px;
@26-offset-y: 0px;
@26-width: 100px;
@26-height: 100px;
@26-total-width: 308px;
@26-total-height: 308px;
@26-image: './spritesmith-generated/sprite.png';
@26: 104px 0px -104px 0px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '26';
@27-name: '27';
@27-x: 0px;
@27-y: 104px;
@27-offset-x: 0px;
@27-offset-y: -104px;
@27-width: 100px;
@27-height: 100px;
@27-total-width: 308px;
@27-total-height: 308px;
@27-image: './spritesmith-generated/sprite.png';
@27: 0px 104px 0px -104px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '27';
@31-name: '31';
@31-x: 104px;
@31-y: 104px;
@31-offset-x: -104px;
@31-offset-y: -104px;
@31-width: 100px;
@31-height: 100px;
@31-total-width: 308px;
@31-total-height: 308px;
@31-image: './spritesmith-generated/sprite.png';
@31: 104px 104px -104px -104px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '31';
@43-name: '43';
@43-x: 208px;
@43-y: 0px;
@43-offset-x: -208px;
@43-offset-y: 0px;
@43-width: 100px;
@43-height: 100px;
@43-total-width: 308px;
@43-total-height: 308px;
@43-image: './spritesmith-generated/sprite.png';
@43: 208px 0px -208px 0px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '43';
@45-name: '45';
@45-x: 208px;
@45-y: 104px;
@45-offset-x: -208px;
@45-offset-y: -104px;
@45-width: 100px;
@45-height: 100px;
@45-total-width: 308px;
@45-total-height: 308px;
@45-image: './spritesmith-generated/sprite.png';
@45: 208px 104px -208px -104px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '45';
@06-name: '06';
@06-x: 0px;
@06-y: 208px;
@06-offset-x: 0px;
@06-offset-y: -208px;
@06-width: 100px;
@06-height: 100px;
@06-total-width: 308px;
@06-total-height: 308px;
@06-image: './spritesmith-generated/sprite.png';
@06: 0px 208px 0px -208px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '06';
@09-name: '09';
@09-x: 104px;
@09-y: 208px;
@09-offset-x: -104px;
@09-offset-y: -208px;
@09-width: 100px;
@09-height: 100px;
@09-total-width: 308px;
@09-total-height: 308px;
@09-image: './spritesmith-generated/sprite.png';
@09: 104px 208px -104px -208px 100px 100px 308px 308px './spritesmith-generated/sprite.png' '09';
@retina-14-name: 'retina_14';
@retina-14-x: 0px;
@retina-14-y: 0px;
@retina-14-offset-x: 0px;
@retina-14-offset-y: 0px;
@retina-14-width: 200px;
@retina-14-height: 200px;
@retina-14-total-width: 616px;
@retina-14-total-height: 616px;
@retina-14-image: './spritesmith-generated/sprite@2x.png';
@retina-14: 0px 0px 0px 0px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_14';
@retina-26-name: 'retina_26';
@retina-26-x: 208px;
@retina-26-y: 0px;
@retina-26-offset-x: -208px;
@retina-26-offset-y: 0px;
@retina-26-width: 200px;
@retina-26-height: 200px;
@retina-26-total-width: 616px;
@retina-26-total-height: 616px;
@retina-26-image: './spritesmith-generated/sprite@2x.png';
@retina-26: 208px 0px -208px 0px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_26';
@retina-27-name: 'retina_27';
@retina-27-x: 0px;
@retina-27-y: 208px;
@retina-27-offset-x: 0px;
@retina-27-offset-y: -208px;
@retina-27-width: 200px;
@retina-27-height: 200px;
@retina-27-total-width: 616px;
@retina-27-total-height: 616px;
@retina-27-image: './spritesmith-generated/sprite@2x.png';
@retina-27: 0px 208px 0px -208px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_27';
@retina-31-name: 'retina_31';
@retina-31-x: 208px;
@retina-31-y: 208px;
@retina-31-offset-x: -208px;
@retina-31-offset-y: -208px;
@retina-31-width: 200px;
@retina-31-height: 200px;
@retina-31-total-width: 616px;
@retina-31-total-height: 616px;
@retina-31-image: './spritesmith-generated/sprite@2x.png';
@retina-31: 208px 208px -208px -208px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_31';
@retina-43-name: 'retina_43';
@retina-43-x: 416px;
@retina-43-y: 0px;
@retina-43-offset-x: -416px;
@retina-43-offset-y: 0px;
@retina-43-width: 200px;
@retina-43-height: 200px;
@retina-43-total-width: 616px;
@retina-43-total-height: 616px;
@retina-43-image: './spritesmith-generated/sprite@2x.png';
@retina-43: 416px 0px -416px 0px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_43';
@retina-45-name: 'retina_45';
@retina-45-x: 416px;
@retina-45-y: 208px;
@retina-45-offset-x: -416px;
@retina-45-offset-y: -208px;
@retina-45-width: 200px;
@retina-45-height: 200px;
@retina-45-total-width: 616px;
@retina-45-total-height: 616px;
@retina-45-image: './spritesmith-generated/sprite@2x.png';
@retina-45: 416px 208px -416px -208px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_45';
@retina-06-name: 'retina_06';
@retina-06-x: 0px;
@retina-06-y: 416px;
@retina-06-offset-x: 0px;
@retina-06-offset-y: -416px;
@retina-06-width: 200px;
@retina-06-height: 200px;
@retina-06-total-width: 616px;
@retina-06-total-height: 616px;
@retina-06-image: './spritesmith-generated/sprite@2x.png';
@retina-06: 0px 416px 0px -416px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_06';
@retina-09-name: 'retina_09';
@retina-09-x: 208px;
@retina-09-y: 416px;
@retina-09-offset-x: -208px;
@retina-09-offset-y: -416px;
@retina-09-width: 200px;
@retina-09-height: 200px;
@retina-09-total-width: 616px;
@retina-09-total-height: 616px;
@retina-09-image: './spritesmith-generated/sprite@2x.png';
@retina-09: 208px 416px -208px -416px 200px 200px 616px 616px './spritesmith-generated/sprite@2x.png' 'retina_09';
@spritesheet-width: 308px;
@spritesheet-height: 308px;
@spritesheet-image: './spritesmith-generated/sprite.png';
@spritesheet-sprites: @14 @26 @27 @31 @43 @45 @06 @09;
@spritesheet: 308px 308px './spritesmith-generated/sprite.png' @spritesheet-sprites;
@retina-spritesheet-width: 616px;
@retina-spritesheet-height: 616px;
@retina-spritesheet-image: './spritesmith-generated/sprite@2x.png';
@retina-spritesheet-sprites: @retina-14 @retina-26 @retina-27 @retina-31 @retina-43 @retina-45 @retina-06 @retina-09;
@retina-spritesheet: 616px 616px './spritesmith-generated/sprite@2x.png' @retina-spritesheet-sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
@14-group-name: '14';
@14-group: '14' @14 @retina-14;
@26-group-name: '26';
@26-group: '26' @26 @retina-26;
@27-group-name: '27';
@27-group: '27' @27 @retina-27;
@31-group-name: '31';
@31-group: '31' @31 @retina-31;
@43-group-name: '43';
@43-group: '43' @43 @retina-43;
@45-group-name: '45';
@45-group: '45' @45 @retina-45;
@06-group-name: '06';
@06-group: '06' @06 @retina-06;
@09-group-name: '09';
@09-group: '09' @09 @retina-09;
@retina-groups: @14-group @26-group @27-group @31-group @43-group @45-group @06-group @09-group;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `retina-sprite` class sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

@icon-home-group: 'icon-home' @icon-home @icon-home-2x;

.icon-home {
  .retina-sprite(@icon-home-group);
}
*/
.sprite-background-size(@sprite) {
  @sprite-total-width: extract(@sprite, 7);
  @sprite-total-height: extract(@sprite, 8);
  background-size: @sprite-total-width @sprite-total-height;
}

.retina-sprite(@retina-group) {
  @normal-sprite: extract(@retina-group, 2);
  @retina-sprite: extract(@retina-group, 3);
  .sprite(@normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    .sprite-image(@retina-sprite);
    .sprite-background-size(@normal-sprite);
  }
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}

/*
The `.retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in LESS

.retina-sprites(@retina-groups);
*/
.retina-sprites(@retina-groups, @i: 1) when (@i <= length(@retina-groups)) {
  @retina-group: extract(@retina-groups, @i);
  @sprite-name: e(extract(@retina-group, 1));
  .@{sprite-name} {
    .retina-sprite(@retina-group);
  }
  .retina-sprites(@retina-groups, @i + 1);
}
